// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fysio.Migrations
{
    [DbContext(typeof(FysioDbContext))]
    [Migration("20211006112846_AutoIncrementDrop")]
    partial class AutoIncrementDrop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.DomainModels.Person", b =>
                {
                    b.Property<string>("Emailaddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Emailaddress");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Domain.DomainModels.Physiotherapist", b =>
                {
                    b.HasBaseType("Domain.DomainModels.Person");

                    b.Property<int>("BIGNummer")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Physiotherapist");
                });

            modelBuilder.Entity("Domain.DomainModels.Student", b =>
                {
                    b.HasBaseType("Domain.DomainModels.Person");

                    b.Property<int>("Studentnumber")
                        .HasColumnType("int");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Domain.DomainModels.Teacher", b =>
                {
                    b.HasBaseType("Domain.DomainModels.Person");

                    b.Property<int>("StaffNumber")
                        .HasColumnType("int");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("Domain.DomainModels.Physiotherapist", b =>
                {
                    b.HasOne("Domain.DomainModels.Person", null)
                        .WithOne()
                        .HasForeignKey("Domain.DomainModels.Physiotherapist", "Emailaddress")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.DomainModels.Student", b =>
                {
                    b.HasOne("Domain.DomainModels.Person", null)
                        .WithOne()
                        .HasForeignKey("Domain.DomainModels.Student", "Emailaddress")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.DomainModels.Teacher", b =>
                {
                    b.HasOne("Domain.DomainModels.Person", null)
                        .WithOne()
                        .HasForeignKey("Domain.DomainModels.Teacher", "Emailaddress")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
